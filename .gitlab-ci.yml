image: node:latest

cache:
  paths:
    - node_modules

variables:
  SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar' # Defines the location of the analysis task cache
  GIT_DEPTH: '0' # Tells git to fetch all the branches of the project, required by the analysis task
  DOCKER_DRIVER: overlay2

sonarcloud-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: ['']
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache
  stage: build
  script:
    # - apk add --no-cache 'npm>7'
    # - echo "Building deploy package"
    # - npm install
    # - npm test
    # - echo "Finish running tests. Starting Sonar Scanner"
    - sonar-scanner -Dsonar.qualitygate.wait=true
    - echo "Build and unit test successful"
  artifacts:
    expire_in: 1 hour
    paths:
    # Add your path here
      - /builds/api/coverage
  allow_failure: false  
  only:
    - master
    - merge_requests

build-check:
  image:
    name: node:15.2.0 #sonarsource/sonar-scanner-cli:latest comes with node12
    entrypoint: ['']
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache
  stage: build
  script:
    - echo "Building deploy package"
    - npm install
    - export REACT_APP_BUILD_VERSION="Build $(date +'%Y%m%d%H%M%S')"
    - export REACT_APP_MUI_DATA_GRID_KEY=$MUI_DATA_GRID_KEY
    - node ./prebuild_hooks.js
    - npm test
    - npm run build
    - npm run postinstall
  artifacts:
    expire_in: 1 hour
    paths:
      - build
      - /builds/front-end/coverage
  variables:
    SKIP_PREFLIGHT_CHECK: 'true'
    DOCKER_DRIVER: overlay2
    # Disable source-maps in prod. If left enabled, everyone can see
    # the react application's source code from the browser's dev console
    # https://create-react-app.dev/docs/advanced-configuration
    GENERATE_SOURCEMAP: 'false'
  allow_failure: false
  only:
    - master
    - merge_requests

deploy_prod:
  image:
    name: fabioyyc/falcon-metrics-frontend-ci:0.1
    entrypoint: ['']
  stage: deploy
  script:
    - echo "Deploying to live"
    - npm install -g serverless
    - echo "Deployed to subdirectory $CI_COMMIT_SHA"
    - npm run deploy
    - echo "Updating CloudFront distribution"
    - aws cloudfront get-distribution-config --id ${CF_DIST_PROD} > dist.json
    - JQ_QUERY=".DistributionConfig.Origins.Items[0].OriginPath = \"/${CI_COMMIT_SHA}\""
    - jq "$JQ_QUERY" < dist.json > updated.json
    - CFDIST_ETAG=$(jq -r '.ETag' < dist.json)
    - jq .DistributionConfig < updated.json > new-dist-config.json
    - cat new-dist-config.json
    - aws cloudfront update-distribution --id ${CF_DIST_PROD} --distribution-config file://new-dist-config.json --if-match $CFDIST_ETAG
  environment:
    name: production
    url: http://app.example.com/
  variables:
    SLS_DEBUG: '*'
    DEPLOYMENT_BUCKET: falcon-metrics-webapp-prod
    REACT_APP_API_BASE_URL: https://api.example.com/
    API_BASE_URL: https://api.example.com/
  only:
    - master
